DROP DATABASE IF EXISTS expressdb;
CREATE DATABASE expressdb;

USE expressdb;

CREATE TABLE users (
  id VARCHAR(36) PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  surname VARCHAR(255) NOT NULL,
  role ENUM('SUPER', 'ADMIN', 'USER') NOT NULL DEFAULT 'USER',
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  deletedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE posts (
  id VARCHAR(36) PRIMARY KEY,
  userId VARCHAR(36) NOT NULL,
  title VARCHAR(255) NOT NULL UNIQUE,
  content TEXT NOT NULL,
  status ENUM('DRAFT', 'PUBLISHED') NOT NULL DEFAULT 'DRAFT',
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  deletedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE tags (
  id VARCHAR(36) PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  deletedAt TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE posts_tags (
  postId VARCHAR(36) NOT NULL,
  tagId VARCHAR(36) NOT NULL,
  FOREIGN KEY (postId) REFERENCES posts(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (tagId) REFERENCES tags(id) ON UPDATE CASCADE ON DELETE CASCADE
);